swagger: '2.0'
info:
  version: 1.0.0
  title: Spika for Business API v3
  description: >-
    New set of API to use Spika for Business. First of all, you must get an
    access token by calling sign in API. 
schemes:
  - http
  - https
host: 'spika.chat'
basePath: /api/v3
tags:
  - name: Sign in
    description: Operations about sign in
  - name: Messages1
    description: Operations about message
  - name: Sign in/out
    description: Operations about sign in/out
  - name: Messages2
    description: Operations about message
  - name: Favorites
    description: Operations about favorites
  - name: Files
    description: Operations about file
  - name: Groups
    description: Operations about group
  - name: Rooms
    description: Operations about room
  - name: Private Chat
    description: Operations about private chat
  - name: History
    description: Operations about webhook
  - name: Users
    description: Operations about user
  - name: Stickers
    description: Operations about sticker
  - name: Webhooks
    description: Operations about webhook
  - name: Settings
    description: Operations about settings of user
  - name: Others
    description: Others
  - name: Socket API
    description: Socket API
paths:
  /user/signin:
    post:
      tags:
        - Sign in
      summary: Sign in to system.
      description: Sign in to the system and get access token to call other API.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          required: true
          in: body
          description: Parameters to send
          schema:
            required:
              - username
            properties:
              organization:
                type: string
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Access tokan and User and Organization
          schema:
            properties:
              access-token:
                type: string
              user:
                $ref: '#/definitions/UserLogin'
              organization:
                $ref: '#/definitions/Organization'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong username or password
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/message/list/{roomID}/{lastmessageID}/{direction}':
    get:
      tags:
        - Messages1
      summary: Get message list
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomID
          type: string
          required: true
          description: roomID to get message
        - in: path
          name: lastmessageID
          type: string
          required: true
          description: use for paging
        - in: path
          name: direction
          type: string
          required: true
          description: new to get new messages old to get old messages
      responses:
        '200':
          description: A list of Person
          schema:
            properties:
              messages:
                type: array
                items:
                  $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /message/send:
    post:
      tags:
        - Messages1
      summary: Send message
      description: 'Send message to user,group and room.'
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - name: body
          required: true
          in: body
          description: Parameters to send
          schema:
            properties:
              targetType:
                type: string
                description: 1.private 2.group 3.room
              target:
                type: string
              messageType:
                type: string
                description: 1.text 2.file 3.location 4.contact 5.sticker
              message:
                type: string
                description: required if messageType is 1
              file:
                description: required if messageType is 2
                properties:
                  file:
                    $ref: '#/definitions/File'
                  thumb:
                    $ref: '#/definitions/File'
      responses:
        '200':
          description: The message sent
          schema:
            properties:
              message:
                $ref: '#/definitions/Message'
              user:
                $ref: '#/definitions/User'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /signin:
    post:
      tags:
        - Sign in/out
      summary: Sign in to the system.
      description: Sign in to the system and get access token to call other API.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          required: true
          in: body
          description: Parameters to send
          schema:
            required:
              - username
            properties:
              organization:
                type: string
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Access tokan and User and Organization
          schema:
            properties:
              access-token:
                type: string
              user:
                $ref: '#/definitions/UserLogin'
              organization:
                $ref: '#/definitions/Organization'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong username or password
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /signout:
    post:
      tags:
        - Sign in/out
      summary: Sign out from system.
      description: Sign out from the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
      responses:
        '200':
          description: Sign out from the system
        '401':
          description: Wrong apikey
        '403':
          description: Wrong username or password
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /messages:
    post:
      tags:
        - Messages2
      summary: Send message
      description: 'Send message to user,group and room.'
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - name: body
          required: true
          in: body
          description: Parameters to send
          schema:
            properties:
              targetType:
                type: string
                description: 1.private 2.group 3.room
              target:
                type: string
              messageType:
                type: string
                description: 1.text 2.file 3.location 4.contact 5.sticker
              message:
                type: string
                description: required if messageType is 1
              file:
                $ref: '#/definitions/File'
              thumb:
                $ref: '#/definitions/File'
      responses:
        '200':
          description: The message sent
          schema:
            properties:
              message:
                $ref: '#/definitions/Message'
              user:
                $ref: '#/definitions/User'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/messages/{messageId}':
    get:
      tags:
        - Messages2
      summary: Get message details
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: messageId
          type: string
          required: true
          description: message id to get message
      responses:
        '200':
          description: Docuement of Message
          schema:
            properties:
              message:
                $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    put:
      tags:
        - Messages2
      summary: Edit mesasge details
      description: 'Edit message of user, group and room.'
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - name: body
          required: true
          in: body
          description: Parameters to send
          schema:
            properties:
              message:
                $ref: '#/definitions/Message'
      responses:
        '200':
          description: Edited message
          schema:
            properties:
              message:
                $ref: '#/definitions/Message'
              user:
                $ref: '#/definitions/User'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Messages2
      summary: Delete group
      description: Delete group corresonding to group id.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: messageId
          description: mesasgeId to delete message
          type: string
          required: true
      responses:
        '200':
          description: Deleted message
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /messages/forward:
    post:
      tags:
        - Messages2
      summary: Forward a message
      description: 'Forward a message to user,group and room.'
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - name: body
          required: true
          in: body
          description: Parameters to forward message
          schema:
            properties:
              messageId:
                type: string
                description: message id to get original message
              targetType:
                type: string
                description: 1.private 2.group 3.room
              target:
                type: string
      responses:
        '200':
          description: The forwarded message
          schema:
            properties:
              forwardedMessage:
                $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /favorites:
    get:
      tags:
        - Favorites
      summary: Get favorite message list of user
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: query
          name: offset
          description: The offset number of get messages
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get messages
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: The favorite message list
          schema:
            properties:
              FavoriteMessages:
                type: array
                items:
                  $ref: '#definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Favorites
      summary: Add favorite to message
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          required: true
          description: Parameters to send
          schema:
            $ref: '#/definitions/Favorite'
      responses:
        '200':
          description: Added favorite
          schema:
            properties:
              favorite:
                $ref: '#/definitions/Favorite'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/favorites/{favoriteId}':
    delete:
      tags:
        - Favorites
      summary: Remove favorite from Message
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: favoriteId
          type: string
          required: true
          description: favorite id to get favorite resource
      responses:
        '200':
          description: Removed favorite
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/files/download/{fileId}':
    get:
      tags:
        - Files
      summary: Get file
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: fileId
          type: string
          required: true
          description: The file to download.
      responses:
        '200':
          description: The file
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /files/upload:
    post:
      tags:
        - Files
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        '200':
          description: The message sent
          schema:
            properties:
              file:
                $ref: '#/definitions/File'
              thumbnail:
                $ref: '#/definitions/File'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /groups:
    get:
      tags:
        - Groups
      summary: Get all groups
      description: >-
        Get list of all groups which corresponding to user specified by access
        token. You can filter field by adding item to query. If you want to get
        all details of groups, unnecessary to add query items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: query
          name: keyword
          description: Search keyword to get groups
          type: string
        - in: query
          name: offset
          description: The offset number to get groups
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number to get groups
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: A list of Group
          schema:
            properties:
              groups:
                type: array
                items:
                  $ref: '#/definitions/Group'
              count:
                type: number
                format: int32
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad Parameter
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Groups
      summary: Create group
      consumes:
        - multipart/form-data
      description: Create a new group belonging the user who have access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: formData
          type: string
          name: name
          description: Name of new group
          required: true
        - in: formData
          type: string
          name: sortName
          description: SortName of new group
        - in: formData
          type: string
          name: description
          description: Descripiton of new group
        - in: formData
          type: string
          name: users
          description: User ids list of new group by string separated by comma
        - in: formData
          type: file
          name: avatar
          description: Image file of avatar of new group
      responses:
        '200':
          description: Created new group
          schema:
            properties:
              group:
                $ref: '#/definitions/Group'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/groups/{groupId}':
    get:
      tags:
        - Groups
      summary: Get group details
      description: >-
        Get group details specified by id. You can filter field by adding item
        to query. If you want to get all details of group, unnecessary to add
        query items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: group ID to get group list
          type: string
          required: true
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: Document of group
          schema:
            properties:
              group:
                $ref: '#/definitions/Group'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '500':
          description: Server error
      security:
        - api_key: []
    put:
      tags:
        - Groups
      summary: Update Group details
      description: Update Group details specified by id.
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: Group ID to get group list.
          type: string
          required: true
        - in: formData
          type: string
          name: name
          description: Name of new group
        - in: formData
          type: string
          name: sortName
          description: SortName of new group
        - in: formData
          type: string
          name: description
          description: Descripiton of new group
        - in: formData
          type: file
          name: avatar
          description: Image file of avatar of new group
      responses:
        '200':
          description: Updated document of group
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Groups
      summary: Delete group
      description: Delete group corresonding to group id.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: group ID to get group list
          type: string
          required: true
      responses:
        '200':
          description: Deleted group
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/groups/{groupId}/users/':
    get:
      tags:
        - Groups
      summary: Get user list of group
      description: Get user list of group specified by group id. Only return user ids.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: group ID to get group list
          type: string
          required: true
      responses:
        '200':
          description: User list of group
          schema:
            properties:
              group:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  users:
                    $ref: '#/definitions/UserList'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Groups
      summary: Invite users to group
      description: Invite users to group
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: Group ID to get group list.
          type: string
          required: true
        - in: body
          name: body
          description: User IDs to add to group.
          schema:
            properties:
              users:
                $ref: '#/definitions/UserList'
      responses:
        '200':
          description: Added users to group
          schema:
            properties:
              group:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  users:
                    $ref: '#/definitions/UserList'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Groups
      summary: Kick user out from group
      description: >-
        Kick user out from group specified by id. It actually update details of
        gorup.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: group ID to get group list
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#definitions/UserList'
      responses:
        '200':
          description: Deleted users
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/groups/{groupId}/messages/':
    get:
      tags:
        - Groups
      summary: Get list of messages sent to group
      description: Get list of messages sent to group.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: groupId
          description: group ID to get group list
          type: string
          required: true
        - in: query
          name: offset
          description: The offset number of get messages
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get messages
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: List of messages sent to group
          schema:
            properties:
              messages:
                type: array
                items:
                  $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /rooms:
    get:
      tags:
        - Rooms
      summary: Get list of all rooms
      description: >-
        Get list of all rooms of user pecified by access token. You can filter
        field by adding item to query. If you want to get all details of rooms,
        unnecessary to add query items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: query
          name: keyword
          description: Search keyword to get room
          type: string
        - in: query
          name: offset
          description: The offset number of get history
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get history
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: A list of Room
          schema:
            properties:
              rooms:
                type: array
                items:
                  $ref: '#/definitions/Room'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Rooms
      summary: Create room
      description: Create a new room belonging the user who have access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: Parameters of the new room.
          schema:
            properties:
              room:
                $ref: '#definitions/Room'
          required: true
      responses:
        '200':
          description: Created new room
          schema:
            properties:
              room:
                $ref: '#/definitions/Room'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/rooms/{roomId}':
    get:
      tags:
        - Rooms
      summary: Get room
      description: >-
        Get room object specified by room id. You can filter field by adding
        item to query. If you want to get all details of room, unnecessary to
        add query items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room list
          type: string
          required: true
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: Document of room
          schema:
            properties:
              room:
                $ref: '#/definitions/Room'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    put:
      tags:
        - Rooms
      summary: Update room details
      description: Update room details specified by id
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#definitions/Room'
          required: true
      responses:
        '200':
          description: Updated document of room
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Rooms
      summary: Delete room
      description: Delete room corresonds to room id.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room
          type: string
          required: true
      responses:
        '200':
          description: Deleted room
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /rooms/leave:
    post:
      tags:
        - Rooms
      summary: Leave room
      description: Leave room.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: room id
          description: Parameters of the new room.
          schema:
            properties:
              roomId:
                type: string
          required: true
      responses:
        '200':
          description: Leave room
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/rooms/{roomId}/users/':
    get:
      tags:
        - Rooms
      summary: Get user list of room
      description: Get user list of room specified by id. Only return user ids.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room
          type: string
          required: true
      responses:
        '200':
          description: User list of room
          schema:
            properties:
              room:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  users:
                    $ref: '#/definitions/UserList'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Rooms
      summary: Invite user to room
      description: Add user to room specified by id
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room list
          type: string
          required: true
        - in: body
          name: body
          schema:
            properties:
              users:
                $ref: '#definitions/UserList'
      responses:
        '200':
          description: Added users to room
          schema:
            properties:
              room:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  users:
                    $ref: '#/definitions/UserList'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Rooms
      summary: Kick user out from room
      description: >-
        Delete user from room specified by id. It actually update details of
        gorup.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room list
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: '#definitions/UserList'
      responses:
        '200':
          description: Deleted users
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/rooms/{roomId}/messages/':
    get:
      tags:
        - Rooms
      summary: Get list of messages sent to room
      description: Get list of messages sent to room.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: roomId
          description: room ID to get room list
          type: string
          required: true
        - in: query
          name: offset
          description: The offset number of get messages
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get messages
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: list of messages sent to toom
          schema:
            properties:
              messages:
                type: array
                items:
                  $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/private/{targetUserId}/messages/':
    get:
      tags:
        - Private Chat
      summary: Get list of messages sent to private chat
      description: Get list of messages sent to private chat.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: targetUserId
          description: Target user ID to get private chat list
          type: string
          required: true
        - in: query
          name: offset
          description: The offset number of get messages
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get messages
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: list of messages sent to private chat
          schema:
            properties:
              messages:
                type: array
                items:
                  $ref: '#/definitions/Message'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /users:
    post:
      tags:
        - Users
      summary: Create user
      consumes:
        - multipart/form-data
      description: Create a new user belonging the user who have access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: formData
          type: string
          name: name
          description: Name of new user
          required: true
        - in: formData
          type: string
          name: userid
          description: Id of new user. User id must contain only alphabet and number, and more than 6 characters.
          required: true
        - in: formData
          type: string
          name: password
          description: Password of new user
          required: true
        - in: formData
          type: string
          name: sortName
          description: SortName of new user
        - in: formData
          type: string
          name: description
          description: Descripiton of new user
        - in: formData
          type: number
          format: int32
          name: status
          description: Status of new user
          default: 1
        - in: formData
          type: string
          name: groups
          description: Group of new user by string separated by comma. It should include the belonging department. If you save a user without department, the user will not see other users in web client and app.
        - in: formData
          type: number
          format: int32
          name: Permission
          description: Permission of new user. Web-Client is 1, sub Admin is 2.
          default: 1
        - in: formData
          type: file
          name: avatar
          description: Image file of avatar of new group
      responses:
        '200':
          description: Created new user
          schema:
            properties:
              user:
                $ref: '#definitions/User'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/users/{id}':
    get:
      tags:
        - Users
      summary: Get user
      description: >-
        Get user object specified by id. You can filter field by adding item to
        query. If you want to get all details of user, unnecessary to add query
        items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: id
          description: user ID to get user list
          type: string
          required: true
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: Document of user
          schema:
            properties:
              user:
                $ref: '#/definitions/User'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    put:
      tags:
        - Users
      summary: Update user details
      description: Update user details specified by id.
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: id
          description: user ID to get user
          type: string
          required: true
        - in: formData
          type: string
          name: name
          description: Name of new user
        - in: formData
          type: string
          name: userid
          description: Id of new user. User id must contain only alphabet and number, and more than 6 characters.
        - in: formData
          type: string
          name: password
          description: Password of new user
        - in: formData
          type: string
          name: sortName
          description: SortName of new user
        - in: formData
          type: string
          name: description
          description: Descripiton of new user
        - in: formData
          type: number
          format: int32
          name: status
          description: Status of new user
          default: 1
        - in: formData
          type: string
          name: groups
          description: Group of new user by string separated by comma. It should include the belonging department. If you save a user without department, the user will not see other users in web client and app.
        - in: formData
          type: number
          format: int32
          name: Permission
          description: Permission of new user. Web-Client is 1, sub Admin is 2.
          default: 1
        - in: formData
          type: file
          name: avatar
          description: Image file of avatar of new group
      responses:
        '200':
          description: Updated document of user
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Users
      summary: Delete user
      description: Delete user corresonds to user id.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: id
          description: user ID to get user
          type: string
          required: true
      responses:
        '200':
          description: Deleted user
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /users/status:
    post:
      tags:
        - Users
      summary: Get list of online status specified by user ids.
      description: Get list of online status specified by user ids.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: user IDs to get list of online status
          required: true
          schema:
            properties:
              userIds:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: The online status of user
          schema:
            properties:
              statusList:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    onlineStatus:
                      type: boolean
                      default: true
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /history:
    get:
      tags:
        - History
      summary: Get chat history of user specified by access token
      description: Get the chat history of user specified by access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: query
          name: offset
          description: The offset number of get history
          type: integer
          format: int32
        - in: query
          name: limit
          description: The limit number of get history
          type: integer
          format: int32
        - in: query
          name: sort
          description: >-
            Sort by fields set by string like [field name]:asc, [field
            name]:desc
          type: string
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: History which user have
          schema:
            properties:
              history:
                type: array
                items:
                  $ref: '#/definitions/History'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/history/diff/{lastUpdate}':
    get:
      tags:
        - History
      summary: Get chat history of user specified by access token
      description: Get the chat history of user specified by access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: lastUpdate
          description: last update time
          type: number
          format: double
          required: true
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: History which user have
          schema:
            properties:
              history:
                type: array
                items:
                  $ref: '#/definitions/History'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /history/markall:
    post:
      tags:
        - History
      summary: Mark as read all messages
      description: Mark as read all messages of specified user
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: Parameters to mark as all history
          schema:
            required:
              - userId
            properties:
              userId:
                type: string
      responses:
        '200':
          description: Mark as read all messages of specified user
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /settings/block:
    get:
      tags:
        - Settings
      summary: Get list of blocked user
      description: Get list of blocked user from the user specified by access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
      responses:
        '200':
          description: The id list of blocked user
          schema:
            properties:
              blocked:
                type: array
                items:
                  type: string
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Settings
      summary: Add some user as blocked
      description: Create a new group belonging the user who have access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: The parameters to update block user list
          schema:
            properties:
              userId:
                type: string
              block:
                type: boolean
                description: 'If you want to block, this parameter should be true'
              targetIds:
                type: array
                items:
                  type: string
          required: true
      responses:
        '200':
          description: Update block user list
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /settings/mute:
    post:
      tags:
        - Settings
      summary: Add some user as muted
      description: Create a new group belonging the user who have access token.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: The parameters to update muted list
          schema:
            properties:
              userId:
                type: string
              mute:
                type: boolean
                description: 'If you want to mute, this parameter should be true'
              targetIds:
                type: array
                items:
                  type: string
          required: true
      responses:
        '200':
          description: Updated mute list
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /stickers:
    get:
      tags:
        - Stickers
      summary: Get list of stickers in the organization
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
      responses:
        '200':
          description: The Stickers list
          schema:
            properties:
              stickers:
                type: array
                items:
                  $ref: '#/definitions/Sticker'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/stickers/{fileId}':
    get:
      tags:
        - Stickers
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: fileId
          type: string
          required: true
          description: Id to get sticker
      responses:
        '200':
          description: The sticker
          schema:
            properties:
              sticker:
                $ref: '#/definitions/Sticker'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  /hooks:
    get:
      tags:
        - Webhooks
      summary: Get list of hooks
      description: >-
        Get list of webhook of user specified by access token. You can filter
        field by adding item to query. If you want to get all details of user,
        unnecessary to add query items.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: query
          name: fields
          description: >-
            Use for filtering params. Only return set fields if you set them,
            otherwise all fields will be returned.
          type: array
          items:
            type: string
      responses:
        '200':
          description: The id list of webhook
          schema:
            properties:
              hooks:
                type: array
                items:
                  $ref: '#/definitions/Webhook'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '500':
          description: Server error
      security:
        - api_key: []
    post:
      tags:
        - Webhooks
      summary: Add Webhook
      description: Add Webhook. You can choose inbound/outgoing with "hookType" field.
      consumes:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: body
          name: body
          description: Parameters of webhook
          required: true
          schema:
            properties:
              hook:
                $ref: '#/definitions/Webhook'
      responses:
        '200':
          description: The sticker
          schema:
            properties:
              sticker:
                $ref: '#/definitions/Webhook'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
  '/hooks/{hookId}':
    get:
      tags:
        - Webhooks
      summary: Get details of webhook
      description: Get details of webhook specified by id.
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
      responses:
        '200':
          description: The details of webhook resource
          schema:
            properties:
              hook:
                $ref: '#/definitions/Webhook'
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    put:
      tags:
        - Webhooks
      summary: Edit Webhook
      consumes:
        - application/json
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: hookId
          description: Parameters of webhook
          required: true
          type: string
      responses:
        '200':
          description: Update Webhook for inbound
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
    delete:
      tags:
        - Webhooks
      summary: Delete Webhook
      description: Delete Webhook
      parameters:
        - in: header
          name: access-token
          description: Access token which is generated in signin.
          type: string
          required: true
        - in: path
          name: hookId
          description: Parameters of webhook
          required: true
          type: string
      responses:
        '200':
          description: Deleted message
        '401':
          description: Wrong apikey
        '403':
          description: Wrong access token
        '422':
          description: Bad parmeter
        '500':
          description: Server error
      security:
        - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: apiKey
    in: header
definitions:
  UserLogin:
    properties:
      _id:
        type: string
      name:
        type: string
      avatar:
        $ref: '#/definitions/File'
      description:
        type: string
      organizationId:
        type: string
      sortName:
        type: string
      userid:
        type: string
      blocked:
        type: array
        items:
          type: string
      muted:
        type: array
        items:
          type: string
      created:
        type: number
        format: double
  User:
    properties:
      id:
        type: string
      name:
        type: string
      sortName:
        type: string
      description:
        type: string
      userid:
        type: string
      password:
        type: string
      created:
        type: number
        format: double
      token:
        type: array
        items:
          type: string
      pushToken:
        type: array
        items:
          type: string
      voipPushToken:
        type: array
        items:
          type: string
      organizationId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      avatar:
        $ref: '#/definitions/Avatar'
      groups:
        $ref: '#/definitions/GroupList'
      permission:
        type: integer
        format: int32
      muted:
        type: array
        items:
          type: string
      blocked:
        type: array
        items:
          type: string
      devices:
        type: array
        items:
          type: string
      UUID:
        type: array
        items:
          type: string
      phoneNumber:
        type: string
      activationCode:
        type: string
  UserList:
    type: array
    items:
      type: string
  File:
    properties:
      size:
        type: integer
        format: int32
      fileId:
        type: string
      mimeType:
        type: string
  Organization:
    properties:
      _id:
        type: string
      name:
        type: string
      created:
        type: number
        format: double
  Group:
    properties:
      id:
        type: string
      name:
        type: string
      sortName:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      description:
        type: string
      created:
        type: number
        format: double
      avatar:
        $ref: '#/definitions/Avatar'
      organizationId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      users:
        $ref: '#/definitions/UserList'
      parentId:
        type: string
      type:
        type: integer
        format: int32
      default:
        type: boolean
        description: default department when new organization is created
  GroupList:
    type: array
    items:
      type: string
  Room:
    properties:
      id:
        type: string
      users:
        $ref: '#/definitions/UserList'
      owner:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      name:
        type: string
      description:
        type: string
      created:
        type: number
        format: double
      modified:
        type: number
        format: double
      lastMessage:
        type: string
        description: id of last message
      type:
        type: number
        format: double
      avatar:
        $ref: '#/definitions/Avatar'
  History:
    properties:
      id:
        type: string
      userId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      chatId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            example: true
      chatType:
        type: integer
        format: int32
      lastUpdate:
        type: number
        format: double
      lastUpdateUnreadCount:
        type: number
        format: double
      lastUpdateUser:
        $ref: '#/definitions/User'
      lastMessage:
        $ref: '#/definitions/Message'
      unreadCount:
        type: integer
        format: int32
  Message:
    properties:
      _id:
        type: string
      message:
        type: string
      roomID:
        type: string
      created:
        type: number
        format: double
      user:
        $ref: '#/definitions/User'
      file:
        properties:
          file:
            $ref: '#/definitions/File'
          thumb:
            $ref: '#/definitions/File'
  Favorite:
    properties:
      _id:
        type: string
      userId:
        type: string
      messageId:
        type: string
      created:
        type: number
        format: double
  Avatar:
    properties:
      picture:
        type: object
        properties:
          originalName:
            type: string
          size:
            type: integer
            format: int32
          mimeType:
            type: string
          nameOnServer:
            type: string
      thumbnail:
        type: object
        properties:
          originalName:
            type: string
          size:
            type: integer
            format: int32
          mimeType:
            type: string
          nameOnServer:
            type: string
  Sticker:
    properties:
      name:
        type: string
      sortName:
        type: string
      description:
        type: string
      created:
        type: number
        format: double
      pictures:
        type: array
        items:
          type: string
      type:
        type: number
        format: int32
      organizationId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            default: true
  Webhook:
    properties:
      userId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            default: true
      identifier:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            default: true
      targetType:
        type: number
        format: int32
      targetId:
        type: object
        properties:
          type:
            type: string
          index:
            type: boolean
            default: true
      hookType:
        type: number
        format: int32
      url:
        type: string
      created:
        type: number
        format: double
